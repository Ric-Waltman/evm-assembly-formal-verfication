// Horse Store
// data flow: calldata -> function dispatch -> function

// 60008060093d393df3 -> Contract Creation Bytecode
#define macro MAIN() = takes(0) returns(0) {
    0x00            // [0]

    // calldataload loads 32 bytes
    calldataload    // [data[0]]
    
    // how do we cut down calldataload to the fn selector of 4 bytes
    // 32bytes - 4bytes = 28bytes * 8 = 224 dec == 0xe0
    0xe0            // [0xe0, data[0]]
    shr             // [fn_selector]

    // Jump to function data associated with fn_selector
    // updateHorseNumber(uint256) -> 0xcdfead2e
    dup1            // [fn_selector, fn_selector]    
    0xcdfead2e      // [0xcdfead2e, fn_selector, fn_selector]
    eq              // [(0xcdfead2e == fn_selector), fn_selector]
    updateJump      // [updateJump, (0xcdfead2e == fn_selector), fn_selector]
    jumpi           // [fn_selector]

    // readNumberOfHorses() -> 0xe026c017
    0xe026c017      // [0xe026c017, fn_selector]
    eq              // [(0xe026c017 == fn_selector)]
    readJump        // [readJump, (0xe026c017 == fn_selector)]
    jumpi           // []

    updateJump:
        SET_NUMBER_OF_HORSES()// []
    readJump:
        READ_NUMBER_OF_HORSES()// []
}

#define macro SET_NUMBER_OF_HORSES() = takes(0) returns(0){}
#define macro READ_NUMBER_OF_HORSES() = takes(0) returns(0){}